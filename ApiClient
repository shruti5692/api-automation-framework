package com.framework.core;

import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;

import java.util.Map;

import static io.restassured.RestAssured.given;

/**
 * Generic API client. Accepts full URL, method, headers map, body, and optional basic auth.
 */
public class ApiClient {

    public static Response send(String fullUrl, String method, Map<String, String> headers, String body,
                                String username, String password) {
        RequestSpecification req = given().relaxedHTTPSValidation();

        if (headers != null) {
            headers.forEach(req::header);
        }

        if (username != null && !username.isEmpty()) {
            req.auth().preemptive().basic(username, password == null ? "" : password);
        }

        if (body != null && !body.trim().isEmpty() && !"GET".equalsIgnoreCase(method)) {
            req.body(body);
        }

        switch (method.toUpperCase()) {
            case "GET": return req.get(fullUrl);
            case "POST": return req.post(fullUrl);
            case "PUT": return req.put(fullUrl);
            case "DELETE": return req.delete(fullUrl);
            case "PATCH": return req.patch(fullUrl);
            default: return req.request(method.toUpperCase(), fullUrl);
        }
    }
}
