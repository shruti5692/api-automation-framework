package com.framework.utils;

import okhttp3.*;

import java.util.Map;
import java.util.concurrent.TimeUnit;

public class ApiClient {

    private static final OkHttpClient client = new OkHttpClient.Builder()
            .connectTimeout(30, TimeUnit.SECONDS)
            .readTimeout(60, TimeUnit.SECONDS)
            .build();

    /**
     * Generic GET call with headers.
     */
    public static ApiResponse get(String url, Map<String, String> headers) throws Exception {
        Request.Builder builder = new Request.Builder().url(url);
        if (headers != null) {
            headers.forEach(builder::addHeader);
        }
        Request request = builder.get().build();
        try (Response response = client.newCall(request).execute()) {
            String body = response.body() != null ? response.body().string() : "";
            return new ApiResponse(response.code(), body);
        }
    }

    /**
     * Generic POST call with JSON body and headers.
     */
    public static ApiResponse post(String url, String jsonBody, Map<String, String> headers) throws Exception {
        MediaType JSON = MediaType.parse("application/json");
        RequestBody body = RequestBody.create(jsonBody, JSON);

        Request.Builder builder = new Request.Builder().url(url).post(body);
        if (headers != null) {
            headers.forEach(builder::addHeader);
        }

        Request request = builder.build();
        try (Response response = client.newCall(request).execute()) {
            String responseBody = response.body() != null ? response.body().string() : "";
            return new ApiResponse(response.code(), responseBody);
        }
    }
}
