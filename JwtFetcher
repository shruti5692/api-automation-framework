package utils;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;

public class JwtFetcher {

    // existing fetchStaffJwt(...) method stays as is

    /**
     * Fetch JWT from the iB2B Token Translator service.
     *
     * @return the JWT string if successful, otherwise throws an exception
     */
    public static String fetchIb2bJwt() throws Exception {
        String url = "https://cmb-ib2b-dsp-pprod-eu.systems.uk.hsbc:8443/dsp/rest-sts/DSP_iB2B/iB2B_tokenTranslator?_action=translate";

        // JSON request body
        String body = """
            {
              "input_token_state": {
                "token_type": "CREDENTIAL",
                "username": "GB-SVC-UKBEREV",
                "password": "F568-a55f47837"
              },
              "output_token_state": {
                "token_type": "JWT",
                "issued_token1": "issued_token"
              }
            }
            """;

        Response resp = RestAssured.given()
                .relaxedHTTPSValidation()         // allow self-signed/HSBC internal certs
                .contentType(ContentType.JSON)
                .body(body)
                .post(url)
                .then()
                .statusCode(200)                 // fail fast if not OK
                .extract()
                .response();

        // Adjust the JSON path if HSBCâ€™s response differs
        String jwt = resp.jsonPath().getString("issued_token");

        if (jwt == null || jwt.isEmpty()) {
            throw new IllegalStateException("No JWT returned from iB2B token translator");
        }
        return jwt;
    }
}
