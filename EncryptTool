package com.framework.tools;

import com.framework.config.ConfigManager;
import com.framework.utils.CryptoUtils;

import javax.crypto.KeyGenerator;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Base64;

public class EncryptTool {

    public static void main(String[] args) throws Exception {
        if (args.length == 0) {
            System.out.println("Usage: java EncryptTool generate-key | encrypt <value>");
            return;
        }
        if ("generate-key".equalsIgnoreCase(args[0])) {
            KeyGenerator kg = KeyGenerator.getInstance("AES");
            kg.init(128);
            byte[] key = kg.generateKey().getEncoded();
            String base64 = Base64.getEncoder().encodeToString(key);
            // write to default path used in application.properties OR print to console
            String path = "src/test/resources/encryption.key";
            Files.createDirectories(Paths.get("src/test/resources"));
            Files.write(Paths.get(path), base64.getBytes());
            System.out.println("Key generated and saved to " + path);
        } else if ("encrypt".equalsIgnoreCase(args[0]) && args.length == 2) {
            // make sure ConfigManager loaded so CryptoUtils can read key
            ConfigManager.load("src/test/resources/application.properties");
            String enc = CryptoUtils.encrypt(args[1]);
            System.out.println("Put in Excel as: ENC(" + enc + ")");
        } else {
            System.out.println("Unknown command");
        }
    }
}
