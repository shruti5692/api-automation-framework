@Test
public void validateCustomerAccounts() throws Exception {

    // ---------------- Read credentials from Excel ---------------- //
    Map<String, String> authRow = ExcelUtils.readSheet(EXCEL_PATH, AUTH_SHEET).get(0);
    String jwt = JwtFetcher.fetchStaffJwt(authRow.get("Username"));

    // ---------------- Read test data ---------------- //
    Map<String, String> testRow = ExcelUtils.readSheet(EXCEL_PATH, TEST_SHEET).get(0);
    String custNo = testRow.get("CustomerIdentificationNumber");
    String headerJson = testRow.get("Headers");

    // ---------------- Prepare headers ---------------- //
    Map<String, String> headersMap = new HashMap<>(JsonPath.read(headerJson, "$"));
    headersMap.put("X-HSBC-E2E-Trust-Token", jwt);
    headersMap.put("X-HSBC-Sensitive-Data", custNo);

    // ---------------- Build URL ---------------- //
    String url = ConfigManager.get("cust.url") + SENSITIVE_KEY + "/rel-acct?maxAccounts=0004";

    // ---------------- Call API ---------------- //
    OkHttpClient client = new OkHttpClient();
    Request.Builder builder = new Request.Builder().url(url).get();
    headersMap.forEach(builder::addHeader);
    Request request = builder.build();

    List<Map<String, String>> apiData = new ArrayList<>();
    try (Response response = client.newCall(request).execute()) {
        Assert.assertEquals(200, response.code());

        String body = response.body() != null ? response.body().string() : "";
        System.out.println("API Response: " + body);

        // ---------------- Extract API data ---------------- //
        List<Map<String, Object>> accounts = JsonPath.read(body, "$..accountInformationList[*]");
        for (Map<String, Object> acc : accounts) {
            Map<String, Object> details = (Map<String, Object>) acc.get("accountDetails");

            String prodId = String.valueOf(details.get("sortCode")).trim()
                    + String.valueOf(details.get("accountNumber")).trim();
            String prodCode = String.valueOf(acc.get("productCode")).trim();

            Map<String, String> record = new HashMap<>();
            record.put("CUST_NO", custNo);       // aligned with DB column
            record.put("PROD_ID", prodId);       // aligned with DB column
            record.put("PROD_COD", prodCode);    // aligned with DB column
            apiData.add(record);
        }
    }

    // ---------------- Fetch DB data ---------------- //
    List<Map<String, String>> dbData = fetchData(CUSTOMER_QUERY, custNo);

    // ---------------- Compare Results ---------------- //
    System.out.println("DB  : " + dbData);
    System.out.println("API : " + apiData);

    // Instead of strict list equality (order-sensitive), use set equality
    Assert.assertTrue(
        "API and DB results do not match!",
        new HashSet<>(dbData).equals(new HashSet<>(apiData))
    );
}
