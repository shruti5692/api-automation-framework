package tests;

import org.framework.utils.DBUtils;
import java.util.*;

/**
 * Single DB fetch method for both Closed and Open ChargeIDs.
 */
public class DbFetchHelper {

    /**
     * Fetch CHG_ID, OPEN_CLO_STA, CHG_FORM_STA, CYC_CNT
     * Returns Set<String> in format: CHG_ID|OPEN_CLO_STA|CHG_FORM_STA|CYC_CNT
     * For ClosedChargeID, CHG_FORM_STA and CYC_CNT may be empty strings.
     */
    public static Set<String> fetchChargeData(String chargeId) throws Exception {
        String query =
            "SELECT A.CHG_ID, B.OPEN_CLO_STA, A.CHG_FORM_STA, A.CYC_CNT " +
            "FROM INTST02.SEC_CHARGE AS A, INTST02.CUD_PROD_RELN AS B " +
            "WHERE A.CHG_ID = B.PROD_ID AND A.CHG_ID=?";

        List<Map<String, Object>> rows = DBUtils.executeQuery(query, chargeId);
        Set<String> result = new HashSet<>();

        for (Map<String, Object> row : rows) {
            Map<String, Object> normalized = new HashMap<>();
            for (Map.Entry<String, Object> e : row.entrySet()) {
                normalized.put(e.getKey().toUpperCase(), e.getValue());
            }

            String chgId      = String.valueOf(normalized.getOrDefault("CHG_ID", "")).trim();
            String openSta    = String.valueOf(normalized.getOrDefault("OPEN_CLO_STA", "")).trim();
            String formStatus = String.valueOf(normalized.getOrDefault("CHG_FORM_STA", "")).trim();
            String cycCnt     = String.valueOf(normalized.getOrDefault("CYC_CNT", "")).trim();

            result.add(chgId + "|" + openSta + "|" + formStatus + "|" + cycCnt);
        }

        return result;
    }

    // Optional: main method to test
    public static void main(String[] args) throws Exception {
        String chargeId = "SC0000000043";
        fetchChargeData(chargeId).forEach(System.out::println);
    }
}
