package tests;

import org.framework.utils.DBUtils;
import java.util.*;

public class DbFetchHelper {

    // keep the query simpleâ€”no RTRIM, no aliasing
    private static final String QUERY =
        "SELECT CUST_NO, PROD_ID, PROD_COD " +
        "FROM INTST02.CUD_PROD_RELN " +
        "WHERE CUST_NO = ?";

    /**
     * Fetch customer rows as a list of simple String arrays
     *   [CUST_NO, PROD_ID, PROD_COD]
     */
    public static List<String[]> fetchCustomerProducts(String customerNumber) throws Exception {
        List<Map<String, Object>> rows = DBUtils.executeQuery(QUERY, customerNumber);
        List<String[]> result = new ArrayList<>();

        for (Map<String, Object> row : rows) {
            // use the DB column names exactly as they appear in the table
            String custNo  = toStr(row.get("CUST_NO"));
            String prodId  = toStr(row.get("PROD_ID"));
            String prodCod = toStr(row.get("PROD_COD"));
            result.add(new String[]{custNo, prodId, prodCod});
        }
        return result;
    }

    private static String toStr(Object o) {
        return o == null ? "" : o.toString().trim();
    }

    /** Quick test */
    public static void main(String[] args) throws Exception {
        // replace with an actual customer number from your DB
        String customerNo = "1104165104";

        List<String[]> records = fetchCustomerProducts(customerNo);
        if (records.isEmpty()) {
            System.out.println("No records found for: " + customerNo);
        } else {
            for (String[] r : records) {
                System.out.printf("CUST_NO=%s | PROD_ID=%s | PROD_COD=%s%n",
                                  r[0], r[1], r[2]);
            }
        }
    }
}
