package com.framework.utils;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.*;
import com.fasterxml.jackson.databind.ObjectMapper;

public class ApiUtils {

    private static final ObjectMapper mapper = new ObjectMapper();

    public static Map<String, Object> callApi(String configKey, Map<String, String> headers, String body, String method) throws Exception {
        String apiUrl = ConfigReader.get(configKey);
        if (apiUrl == null || apiUrl.isBlank())
            throw new RuntimeException("Missing API URL for key: " + configKey);

        URL url = new URL(apiUrl);
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod(method);
        conn.setConnectTimeout(10000);
        conn.setReadTimeout(15000);

        // --- Add headers ---
        for (Map.Entry<String, String> entry : headers.entrySet()) {
            conn.setRequestProperty(entry.getKey(), entry.getValue());
        }

        // --- Read response ---
        int statusCode = conn.getResponseCode();
        BufferedReader reader = new BufferedReader(new InputStreamReader(
                statusCode < 400 ? conn.getInputStream() : conn.getErrorStream()
        ));

        StringBuilder response = new StringBuilder();
        String line;
        while ((line = reader.readLine()) != null) response.append(line);
        reader.close();

        Map<String, Object> result = new HashMap<>();
        result.put("statusCode", statusCode);

        // Convert JSON to flat map
        Map<String, String> flat = JsonUtils.jsonToFlatMap(response.toString());
        result.put("responseBody", flat);

        return result;
    }
}
